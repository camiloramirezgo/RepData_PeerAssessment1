install.packages("KernSmooth")
library(KernSmooth)
org.R-project.R force.LANG en_US.UTF-8
org.R-project.R
setwd("~/Desktop/Coursera/Data Science Specialization/Reproducible Research/Assigment 1")
myData  <- read.csv("activity.csv")
myData$date  <- as.Date(maData$date)
myData$date  <- as.Date(myData$date)
head(myDate)
head(myData)
str(myData)
StepsPerDay  <- tapply(myData$steps, myData$date, sum, rm.na = T)
head(StepsPerDay)
head(mean(StepsPerDay))
?mean
StepsPerDay  <- tapply(myData$steps, myData$date, sum, na.rm = T)
head(StepsPerDay)
head(myData)
StepsPerDay  <- tapply(myData$steps, myData$date, sum)
mean(StepsPerDay, na.rm = T)
median(StepsPerDay, na.rm = T)
myData  <- read.csv("activity.csv")
StepsPerDay  <- tapply(myData$steps, myData$date, sum)
median(StepsPerDay, na.rm = T)
mean(StepsPerDay, na.rm = T)
str(myData)
?read.csv
myData <- read.csv("activity.csv", colClasses = c("int", "Date", "Factor"))
myData <- read.csv("activity.csv", colClasses = c("integer", "Date", "Factor"))
myData <- read.csv("activity.csv", colClasses = c("integer", "Date", "factor"))
str(myData)
head(myData)
StepsPerDay  <- tapply(myData$steps, myData$date, sum)
hist(StepsPerDay)
meanSteps
meanSteps <- mean(StepsPerDay, na.rm = T)
meanSteps
roud(meanSteps, 2)
round(meanSteps, 2)
meanSteps
plot(myData$interval, tapply(myData$steps, myData$interval,mean))
levels(myData$interval)
plot(levels(myData$interval), tapply(myData$steps, myData$interval,mean))
tapply(myData$steps, myData$interval,mean)
tapply(myData$steps, myData$interval,mean, na.rm = T)
tapply(myData$steps, myData$interval,mean(na.rm = T))
meanStepsbyIterval  <- tapply(myData$steps, myData$interval, mean, na.rm = T)
str(meanStepsbyIterval)
plot(levels(myData$steps), meanStepsbyIterval)
str(levels(myData$steps))
plot(levels(myData$interval), meanStepsbyIterval)
plot(levels(myData$interval), meanStepsbyIterval, type = "l")
?subset
subset(myData, na.rm = T)
with(myData[complete.cases(myData)], plot(interval, tapply(steps, interval, mean)))
myData[complete.cases(myData),]
head(myData[complete.cases(myData),])
with(myData[complete.cases(myData),], plot(interval, tapply(steps, interval, mean)))
with(myData[complete.cases(myData),], plot(levels(interval), tapply(steps, interval, mean)))
with(myData[complete.cases(myData),], plot(levels(interval), tapply(steps, interval, mean), type = "l"))
str(meanStepsbyIterval)
meanStepsbyIterval <- aggregate(x=list(meanSteps=myData$steps), by=list(interval=myData$interval),FUN=mean, na.rm=TRUE)
head(meanStepsbyIterval)
meanStepsbyIterval  <- tapply(myData$steps, myData$interval, mean, na.rm = T)
meanStepsbyIterval <- aggregate(meanSteps=myData$steps, interval=myData$interval,FUN=mean, na.rm=TRUE)
meanStepsbyIterval <- aggregate(x=meanSteps=myData$steps, by=interval=myData$interval,FUN=mean, na.rm=TRUE)
meanStepsbyIterval <- aggregate(x=myData$steps, by=myData$interval,FUN=mean, na.rm=TRUE)
meanStepsbyIterval <- aggregate(x=myData$steps, by=list(myData$interval),FUN=mean, na.rm=TRUE)
head(meanStepsbyIterval)
meanStepsbyIterval <- aggregate(x=list(meanSteps=myData$steps), by=list(interval=myData$interval),FUN=mean, na.rm=TRUE)
str(meanStepsbyIterval)
plot(meanStepsbyIterval$interval, meanStepsbyIterval$meanSteps)
plot(meanStepsbyIterval$interval, meanStepsbyIterval$meanSteps, type="l")
plot(meanStepsbyIterval$interval, meanStepsbyIterval$meanSteps, type="l")
ggplot(meanStepsbyIterval, aes(x=interval, y=meanSteps)) +
geom_line() +
xlab("5-minute interval") +
ylab("average number of steps taken")
library(ggplot2)
ggplot(meanStepsbyIterval, aes(x=interval, y=meanSteps)) +
geom_line() +
xlab("5-minute interval") +
ylab("average number of steps taken")
ggplot(meanStepsbyIterval, interval, meanSteps) +
geom_line() +
xlab("5-minute interval") +
ylab("average number of steps taken")
?ggplot
ggplot(data=meanStepsbyIterval, aes(x=interval, y=meanSteps)) +
geom_line() +
xlab("5-minute interval") +
ylab("average number of steps taken")
plot(meanStepsbyIterval$interval, meanStepsbyIterval$meanSteps, type="l")
order(meanStepsbyIterval)
head(meanStepsbyIterval)
str(meanStepsbyIterval)
str(meanStepsbyIterval
meanStepsbyIterval
myData <- read.csv("activity.csv", colClasses = c("integer", "Date", "integer"))
meanStepsbyIterval <- aggregate(x=list(meanSteps=myData$steps), by=list(interval=myData$interval),FUN=mean, na.rm=TRUE)
ggplot(data=meanStepsbyIterval, aes(x=interval, y=meanSteps)) +
geom_line() +
xlab("5-minute interval") +
ylab("average number of steps taken")
plot(meanStepsbyIterval$interval, meanStepsbyIterval$meanSteps, type="l")
meanStepsbyIterval <- aggregate(x=list(steps=myData$steps), by=list(interval=myData$interval),FUN=mean, na.rm=TRUE)
maxStepsInterval <- meanStepsbyIterval$interval[meanStepsbyIterval$steps = max(meanStepsbyIterval$steps)]
maxStepsInterval <- meanStepsbyIterval$interval[meanStepsbyIterval$steps == max(meanStepsbyIterval$steps)]
maxStepsInterval
sum(complete.cases(myData))
sum(!complete.cases(myData))
length(myData)
length(myData$steps)
sum(is.na(myData$steps)
sum(is.na(myData$steps))
head(meanStepsbyIterval)
?impute
fillNAs <- function(interval, steps){
newValue <- NA
if (is.na(steps))
newValue <- as.integer(meanStepsbyIterval$steps[meanStepsbyIterval$interval == interval])
else
newValue <- steps
return(newValue)
}
myNewData <- myData
myNewData$steps <-  mapply(FUN=fillNAs, myNewData$interval, myNewData$steps)
head(myNewData)
?qplot
head(weekdays(myData$date))
?weekdays
head(weekdays(myData$date, abbreviate = T))
head(weekdays(myData$date, abbreviate = F))
head(days(myData$date))
head(day(myData$date))
weekdays("Monday")
library("lubridate")
day(myData)
weekday <- function(day){
if (day == "Saturday" | day == "Sunday")
return("weekend")
else
return("weekday")
}
myNewData$day <- sapply(weekdays(myNewData$date), FUN=weekday)
head(myNewData)
str(myNewData)
myNewData$day <- factor(sapply(weekdays(myNewData$date), FUN=weekday))
str(myNewData)
newMeanStepsbyIterval <- aggregate(x=list(steps=myNewData$steps, day = myNewData$day), by=list(interval=myNewData$interval),FUN=mean, na.rm=TRUE)
newMeanStepsbyIterval <- aggregate(x=list(steps=myNewData$steps, day = myNewData$day), by=list(interval=myNewData$interval),FUN=mean)
warnings()
head(newMeanStepsbyInterval)
head(newMeanStepsbyIterval)
?aggregate
newMeanStepsbyInterval <- aggregate(x=list(steps=myNewData$steps), by=list(interval=myNewData$interval, day = myNewData$day),FUN=mean)
head(newMeanStepsbyIterval)
head(newMeanStepsbyInterval)
?ggplot
setwd("~/Desktop/Coursera/Data Science Specialization/Reproducible Research/Assigment1")
?hist
